#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
#         _                                          __
#        | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#        | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#        | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#         \__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

unbind C-m
set -g prefix C-Space
bind C-Space send-prefix

set -g history-limit 9999
set -g detach-on-destroy off
set -g default-shell /bin/bash
set -g mouse on

#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

set-option -g escape-time 0
set -sg repeat-time 500
set -g display-panes-time 1000
set -g display-time 1500

#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

setw -g xterm-keys on
set -sa terminal-overrides ",xterm*:Tc"
set -sa terminal-overrides ",screen-256color*:Tc"
set -g default-terminal "tmux-256color"

#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

set -g base-index 1
setw -g pane-base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on

#――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

set -g status on
setw -g aggressive-resize on
set -g monitor-activity on
set -g visual-activity off
set -s focus-events on

set -g status-justify absolute-centre
set -g status-position top
set -g status-left-length 90
set -g status-right-length 90
set -g status-style bg=default

set -g window-status-style "bg=default"
set -g window-status-last-style "bg=default"
set -g window-status-activity-style "bg=default"
set -g window-status-current-style 'bg=default'
set -g window-status-style 'bg=default'
set -g status-bg 'default'
# set -g window-style ""
# set -g window-active-style ""

set -g status-interval 10

set -g window-status-separator " "
set -g clock-mode-style 24

#------------------------------------------

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"

if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

#------------------------------------------

session_icon=''
time_format='%-I:%M %p'
date_format='%m/%d'
delimiter=""

color_bg="#2e323b"
color_blue="#61afef"
color_gray="#808080"
color_orange="#ff6961"
color_purple_gray="#a7a6ba"
color_white_smoke="#989898"

#------------------------------------------

set -g pane-active-border-style fg=red
set -g pane-border-style "fg=colour239"

set -g message-style bg=$color_purple_gray,fg=$color_bg
set-window-option -g mode-style fg=$color_bg,bg=$color_orange

set -g status-left "#[fg=$color_white_smoke]$session_icon #S#{pomodoro_status}"
set -g status-right "#[fg=$color_white_smoke]$time_format $delimiter $date_format"

set -g window-status-format         "#[fg=$color_gray,italics]#I:#[noitalics]#W#F"
set -g window-status-current-format "#[fg=$color_orange,italics]#I:#[fg=$color_purple_gray,noitalics,bold]#W#F"

#------------------------------------------

# Undercurl
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

color_bg="#2e323b"
color_fg="#282c34"
color_green="#98c379"
color_yellow="#e5c07b"
color_red="#e06c75"
color_blue="#61afef"
color_cyan="#56b6c2"
color_purple="#c678dd"
color_gray="#5c6370"
color_buffer="#939aa3"
color_selection="#3e4452"
color_light_gray="#5c6370"

#------------------------------------------

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-urlview'

set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin '27medkamal/tmux-session-wizard'
# set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'sainnhe/tmux-fzf'

set -g @plugin 'whame/tmux-modal'

set -g @plugin 'olimorris/tmux-pomodoro-plus'
# set -g @plugin 'MunifTanjim/tmux-mode-indicator'
# https://github.com/joshmedeski/sesh

# set -g @plugin 'jabirali/tmux-tilish'
# set -g @tilish-default 'tiled'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

#------------------------------------------

# set -g @continuum-restore 'on' # turn on resurrect restore
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-strategy-nvim 'session'

# set -g @resurrect-dir "$tmux_dir/resurrect"
# set -g @resurrect-save 'S'                          # Save the session
# set -g @resurrect-restore 'R'                       # Reload the session
# set -g @continuum-restore 'off'                     # Last saved session is always restored

set -g @pomodoro_on "  #[fg=$color_red] "
# set -g @pomodoro_complete "  #[fg=$color_green] "
# set -g @pomodoro_pause "  #[fg=$color_yellow] "
# set -g @pomodoro_prompt_break "  #[fg=$color_green] ?"
# set -g @pomodoro_prompt_pomodoro "  #[fg=$color_red] ?"
set -g @pomodoro_interval_display "#[fg=$color_gray]|#[fg=italics]%s"
set -g @pomodoro_complete " ✔︎ "                     # The formatted output when the break is running
set -g @pomodoro_pause " ⏸︎ "                        # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break " ⏲︎ break?"      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro " ⏱︎ start?"   # The formatted output when waiting to start a Pomodoro

# <tmux-prefix> e to restart a Pomodoro
# <tmux-prefix> C-p to open the Pomodoro timer menu
# <tmux-prefix> M-p to set a custom Pomodoro timer
set -g @pomodoro_toggle 'p'
set -g @pomodoro_cancel 'P'
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break
set -g @pomodoro_sound 'Pop'
set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'off'                   # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'off'           # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'off'             # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 25            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_disable_breaks 'off'          # Turn off breaks

# set -g @batt_icon_status_charging "  "
# set -g @batt_icon_status_discharging "  "

#------------------------------------------

bind -n C-l select-pane -R
bind -n C-h select-pane -L
bind -n C-k select-pane -U
bind -n C-j select-pane -D

bind -n M-H previous-window
bind -n M-L next-window

default_pane_resize="5"
bind -r H resize-pane -L "$default_pane_resize"
bind -r J resize-pane -D "$default_pane_resize"
bind -r K resize-pane -U "$default_pane_resize"
bind -r L resize-pane -R "$default_pane_resize"

bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# bind > swap-pane -D       # swap current pane with the next one
# bind < swap-pane -U       # swap current pane with the previous one
# bind -n M-\| split-window -fh -c "#{pane_current_path}"
# bind -n M-\_ split-window -fv -c "#{pane_current_path}"
# bind -n C-S-Left swap-window -t -1\; select-window -t -1
# bind -n C-S-Right swap-window -t +1\; select-window -t +1
# bind b list-buffers     # list paste buffers
# bind p paste-buffer -p  # paste from the top paste buffer
# bind P choose-buffer    # choose which buffer to paste from
# bind k kill-pane -a                  # Kill all panes except for the current one

unbind %
unbind \"
bind -n M-\\ split-window -h -c "#{pane_current_path}"
bind -n M-- split-window -v -c "#{pane_current_path}"

bind k kill-pane
bind K kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" "kill-session -a"

bind s choose-tree
bind S choose-session

unbind r
bind r source-file ~/.tmux.conf \; display "Config reloaded"

bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# maximize current pane
# bind + run "cut -c3- '#{TMUX_CONF}' | sh -s _maximize_pane '#{session_name}' '#D'"
# -- facebook pathpicker -------------------------------------------------------
# bind F run "cut -c3- '#{TMUX_CONF}' | sh -s _fpp '#{pane_id}' '#{pane_current_path}'"

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind Tab switch-client -l
bind C-c new-session

unbind o
bind -r o resize-pane -Z

bind "c" new-window -c "#{pane_current_path}"
bind C-j new-window -n "session-switcher" "\ tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\ sed '/^$/d' |\ fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}' \ --bind 'enter:execute(tmux switch-client -t {})+accept'"

bind x setw synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind L display-popup -d '#{pane_current_path}' -w95% -h95% -E "lazygit"

bind -n M-S if -F '#{s/off//:status}' 'set status off' 'set status on'
bind -n M-: command-prompt

# bind split-window ipython
# tmux-sessionizer
# bind -n C-w display-popup -h 70% -w 85% -E "tmux-sessionizer"

#------------------------------------------

bind -n M-[ copy-mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi L send -X end-of-line
unbind -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

#------------------------------------------
# # Tmux doesn't pass <S-CR> codes to Neovim
# # https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
# bind -n S-Enter send-keys Escape "[13;2u"

# Menu
# bind-key -n M-q display-menu -x L \
#     "New Session"                        S "command-prompt -p \"New Session:\" \"new-session -A -s '%%'\"" \
#     "Kill Other Session(s)"              X "kill-session -a" \
#     "" \
#     "New Window"                         n new-window \
#     "Choose Window"                      c choose-window \
#     "Kill Window"                        x kill-window \
#     "Previous Window"                    P previous-window \
#     "Next Window"                        N next-window \
#     "Horizontal Split"                   - "split-window -h" \
#     "Vertical Split"                     / "split-window -v"  \
#     "Kill Other Panes"                   k "kill-pane -a " \
#     "" \
#     "Layout Horizontal"                  h "select-layout even-horizontal"  \
#     "Layout Vertical"                    v "select-layout even-horizontal"  \
#     "" \
#     "Swap Pane Up"                       < "swap-pane -U" \
#     "Swap Pane Down"                     > "swap-pane -D" \
#     "Break Pane"                         t break-pane \
#     "Join Pane"                          j "choose-window 'join-pane -h -s \"%%\"'" \
#     "#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"

#------------------------------------------

run '~/.tmux/plugins/tpm/tpm'
